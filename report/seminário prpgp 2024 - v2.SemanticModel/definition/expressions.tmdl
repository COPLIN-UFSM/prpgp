expression 'Errors in Dados de Pagamento 2023' =
		let
		Source = BOLSAS_CNPQ,
		  #"Detected Type Mismatches" = let
		    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Source, Table.ColumnsOfType(Source, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),
		    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),
		    fieldNames = Record.FieldNames(recordTypeFields),
		    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),
		    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = "The type of the value does not match the type of the column.", Detail = v], fieldTypes{i}})
		in
		    Table.TransformColumns(Source, pairs),
		  #"Added Index" = Table.AddIndexColumn(#"Detected Type Mismatches", "Row Number" ,1),
		    #"Filtered Rows" = Table.SelectRows(#"Added Index", each ([INSTITUICAO_ORIGEM] = "Universidade Federal de Santa Maria"))
		in
		    #"Filtered Rows"
	lineageTag: 97a30a61-9540-412d-9416-5208bc4e7654
	queryGroup: 'Query Errors - 01/10/2024 07:54:13'

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression BOLSAS_CNPQ =
		let
		    Source = Excel.Workbook(File.Contents("C:\Users\henry\Projects\prpgp\data\cnpq_bolsas_2023.xlsx"), null, true),
		    #"Dados de Pagamento 2023_Sheet" = Source{[Item="Dados de Pagamento 2023",Kind="Sheet"]}[Data],
		    #"Promoted Headers" = Table.PromoteHeaders(#"Dados de Pagamento 2023_Sheet", [PromoteAllScalars=true]),
		    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"ANO_REFERENCIA", Int64.Type}, {"PROCESSO", type text}, {"DATA_INICIO_PROCESSO", Int64.Type}, {"DATA_TERMINO_PROCESSO", Int64.Type}, {"BENEFICIARIO", type text}, {"NU_CPF", type text}, {"LINHA_FOMENTO", type text}, {"MODALIDADE", type text}, {"CATEGORIA_NIVEL", type text}, {"NOME_CHAMADA", type text}, {"PROGRAMA_CNPQ", type text}, {"GRANDE_AREA", type text}, {"AREA", type text}, {"SUBAREA", type text}, {"INSTITUICAO_ORIGEM", type text}, {"SIGLA_UF_ORIGEM", type text}, {"PAIS_ORIGEM", type text}, {"INSTITUICAO_DESTINO", type text}, {"SIGLA_INSTITUICAO_DESTINO", type text}, {"SIGLA_INSTITUICAO_MACRO", type text}, {"CIDADE_DESTINO", type text}, {"SIGLA_UF_DESTINO", type text}, {"REGIAO", type text}, {"PAIS_DESTINO", type text}, {"TITULO_PROJETO", type text}, {"PALAVRA_CHAVE", type text}, {"VALOR_PAGO", type number}}),
		    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"NU_CPF", "CPF"}}),
		    #"Removed Columns" = Table.RemoveColumns(#"Renamed Columns",{"DATA_INICIO_PROCESSO", "DATA_TERMINO_PROCESSO"}),
		    #"Inserted Date" = Table.AddColumn(#"Removed Columns", "Data referÃªncia", each Date.From(Text.From([ANO_REFERENCIA], "pt-BR")), type date)
		in
		    #"Inserted Date"
	lineageTag: fa65aac0-ebd0-43a3-aeeb-622fe75028a1

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

